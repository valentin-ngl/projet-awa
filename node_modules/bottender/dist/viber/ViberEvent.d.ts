import { Event } from '../context/Event';
import { ConversationStartedEvent, DeliveredEvent, FailedEvent, SeenEvent, SubscribedEvent, UnsubscribedEvent, ViberMessage, ViberRawEvent } from './ViberTypes';
export default class ViberEvent implements Event<ViberRawEvent> {
    _rawEvent: ViberRawEvent;
    constructor(rawEvent: ViberRawEvent);
    get rawEvent(): ViberRawEvent;
    get timestamp(): number;
    get isMessage(): boolean;
    get message(): ViberMessage | null;
    get isText(): boolean;
    get text(): string | null;
    get isPicture(): boolean;
    get picture(): string | null;
    get isVideo(): boolean;
    get video(): string | null;
    get isFile(): boolean;
    get file(): string | null;
    get isSticker(): boolean;
    get sticker(): number | null;
    get isContact(): boolean;
    get contact(): Record<string, any> | null;
    get isURL(): boolean;
    get url(): string | null;
    get isLocation(): boolean;
    get location(): Record<string, any> | null;
    get isSubscribed(): boolean;
    get subscribed(): SubscribedEvent | null;
    get isUnsubscribed(): boolean;
    get unsubscribed(): UnsubscribedEvent | null;
    get isConversationStarted(): boolean;
    get conversationStarted(): ConversationStartedEvent | null;
    get isDelivered(): boolean;
    get delivered(): DeliveredEvent | null;
    get isSeen(): boolean;
    get seen(): SeenEvent | null;
    get isFailed(): boolean;
    get failed(): FailedEvent | null;
}
//# sourceMappingURL=ViberEvent.d.ts.map