import { Event } from '../context/Event';
import { AccountLink, Beacon, EventMessage, LineEventOptions, LineRawEvent, Postback, Source, Things, UserSource } from './LineTypes';
export default class LineEvent implements Event<LineRawEvent> {
    _rawEvent: LineRawEvent;
    _destination: string | undefined;
    constructor(rawEvent: LineRawEvent, options?: LineEventOptions);
    get rawEvent(): LineRawEvent;
    get timestamp(): number;
    get destination(): string | null;
    get replyToken(): string | null;
    get source(): Source;
    get isMessage(): boolean;
    get message(): EventMessage | null;
    get isText(): boolean;
    get text(): string | null;
    get isImage(): boolean;
    get image(): EventMessage | null;
    get isVideo(): boolean;
    get video(): EventMessage | null;
    get isAudio(): boolean;
    get audio(): EventMessage | null;
    get isLocation(): boolean;
    get location(): EventMessage | null;
    get isSticker(): boolean;
    get sticker(): EventMessage | null;
    get isFollow(): boolean;
    get follow(): Source | null;
    get isUnfollow(): boolean;
    get unfollow(): Source | null;
    get isJoin(): boolean;
    get join(): Source | null;
    get isLeave(): boolean;
    get leave(): Source | null;
    get isPostback(): boolean;
    get postback(): Postback | null;
    get isPayload(): boolean;
    get payload(): string | null;
    get date(): string | null;
    get time(): string | null;
    get datetime(): string | null;
    get isBeacon(): boolean;
    get beacon(): Beacon | null;
    get isAccountLink(): boolean;
    get accountLink(): AccountLink | null;
    get isMemberJoined(): boolean;
    get memberJoined(): {
        members: UserSource[];
    } | null;
    get isMemberLeft(): boolean;
    get memberLeft(): {
        members: UserSource[];
    } | null;
    get isThings(): boolean;
    get isThingsLink(): boolean;
    get isThingsUnlink(): boolean;
    get isThingsScenarioResult(): boolean;
    get isDeviceLink(): boolean;
    get isDeviceUnlink(): boolean;
    get things(): Things | null;
}
//# sourceMappingURL=LineEvent.d.ts.map