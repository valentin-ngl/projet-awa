import { AxiosInstance } from 'axios';
import { OnRequestFunction } from 'messaging-api-common';
import * as Types from './SlackTypes';
interface ClientConfig {
    url: string;
    onRequest?: OnRequestFunction;
}
export default class SlackWebhookClient {
    /**
     * @deprecated Use `new SlackWebhookClient(...)` instead.
     */
    static connect(config: ClientConfig): SlackWebhookClient;
    /**
     * The underlying axios instance.
     */
    readonly axios: AxiosInstance;
    /**
     * The callback to be called when receiving requests.
     */
    private onRequest?;
    constructor(config: ClientConfig);
    sendRawBody(body: Record<string, any>): Promise<Types.SendMessageSuccessResponse>;
    sendText(text: string): Promise<Types.SendMessageSuccessResponse>;
    /**
     * Attachments
     *
     * https://api.slack.com/docs/message-attachments
     */
    sendAttachments(attachments: Types.Attachment[]): Promise<Types.SendMessageSuccessResponse>;
    sendAttachment(attachment: Types.Attachment): Promise<Types.SendMessageSuccessResponse>;
}
export {};
//# sourceMappingURL=SlackWebhookClient.d.ts.map